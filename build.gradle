plugins {
    id "groovy"
    id "org.grails.grails-web"
    id "org.grails.grails-gsp"
    id "war"
    id "idea"
    id "com.bertramlabs.asset-pipeline"
    id "org.grails.grails-plugin"
    id "application"
    id "eclipse"
    id 'maven-publish'
    id 'java-library'

    id "signing"
    id "io.github.gradle-nexus.publish-plugin"
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

repositories {
//    mavenLocal()
    mavenCentral()
//    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://repo.grails.org/grails/core/" }
}

dependencies {
// for testing purposes
//    implementation files('lib/sitemesh-3.1.0-SNAPSHOT.jar', 'lib/spring-boot-starter-sitemesh-3.1.0-SNAPSHOT-plain.jar')
    api('org.sitemesh:spring-boot-starter-sitemesh:3.1.0')
    compileOnly project(':grails-web-sitemesh2-adapter')

    runtimeOnly("org.grails:grails-core")
    runtimeOnly("org.grails:grails-logging")
    implementation("org.grails:grails-plugin-databinding")
    implementation("org.grails:grails-plugin-i18n")
    implementation("org.grails:grails-plugin-interceptors") {
        exclude group:'org.grails.plugins', module:'sitemesh2'
        exclude group:'org.grails', module:'grails-web-sitemesh'
    }
    implementation("org.grails:grails-plugin-rest") {
        exclude group:'org.grails', module:'grails-web-sitemesh'
    }
    implementation("org.grails:grails-plugin-services")
    implementation("org.grails:grails-plugin-url-mappings") {
        exclude group:'org.grails', module:'grails-web-sitemesh'
    }
    implementation("org.grails:grails-web-boot")
    implementation("org.grails.plugins:gsp:${grailsGspVersion}") {
        exclude group:'org.grails.plugins', module:'sitemesh2'
        exclude group:'org.grails', module:'grails-web-sitemesh'
    }
    runtimeOnly("org.grails.plugins:hibernate5")
    runtimeOnly("org.grails.plugins:scaffolding") {
        exclude group:'org.grails.plugins', module:'sitemesh2'
        exclude group:'org.grails', module:'grails-web-sitemesh'
    }
    runtimeOnly("org.hibernate:hibernate-core:5.6.15.Final")
    runtimeOnly("org.springframework.boot:spring-boot-autoconfigure")
    runtimeOnly("org.springframework.boot:spring-boot-starter-actuator")
    runtimeOnly("org.springframework.boot:spring-boot-starter-logging")
    runtimeOnly("org.springframework.boot:spring-boot-starter-tomcat")
    runtimeOnly("org.springframework.boot:spring-boot-starter-validation")
    compileOnly("io.micronaut:micronaut-inject-groovy")
    console("org.grails:grails-console")
    runtimeOnly("com.bertramlabs.plugins:asset-pipeline-grails:4.3.0")
    runtimeOnly("com.h2database:h2")
    runtimeOnly("javax.xml.bind:jaxb-api:2.3.1")
    runtimeOnly("org.apache.tomcat:tomcat-jdbc")
    runtimeOnly("org.fusesource.jansi:jansi:1.18")
    runtimeOnly("org.glassfish.web:el-impl:2.2.1-b05")

    runtimeOnly "javax.servlet:jstl:1.2"
    runtimeOnly 'org.apache.tomcat.embed:tomcat-embed-jasper' // jsp example

    api ("org.grails:grails-web-gsp-taglib:${grailsGspVersion}") {
        exclude group: 'io.micronaut', module : 'micronaut-aop'
        exclude group: 'io.micronaut', module : 'micronaut-runtime'
        exclude group: 'io.micronaut.spring'
        exclude group: 'io.micronaut.cache'
    }
}

application {
    mainClass.set("org.sitemesh.grails.plugins.sitemesh3.Application")
}

tasks.withType(Test) {
    useJUnitPlatform()
}

assets {
    minifyJs = true
    minifyCss = true
    packagePlugin = true
}

// https://github.com/grails/grails-core/issues/12213
jar {
    exclude 'gsp**'
    exclude 'META-INF/assets**'
    exclude 'messages*.properties*'
    exclude 'layouts'

    List excludes = ['BootStrap','Application','UrlMappings', 'DemoController']
    excludes.each {
        exclude "**/${it}*.class"
    }
    eachFile { copyDetails ->
        if (copyDetails.path.contains('grails-plugin.xml')) {
            filter { line -> excludes.find{line.contains(it)}? null : line}
        }
    }
// https://stackoverflow.com/questions/29147643/how-to-exclude-dependencies-in-the-pom-file-generated-by-the-gradle
// https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#packaging-executable.and-plain-archives
    archiveClassifier=''
//    enabled = false
}

// https://docs.gradle.org/current/userguide/publishing_gradle_module_metadata.html
tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

allprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    apply plugin: 'signing'

    group = "org.sitemesh"
    version "6.1.0-SNAPSHOT"

    java {
        sourceCompatibility = JavaVersion.toVersion("11")
        withSourcesJar()
    }

    // https://docs.gradle.org/current/userguide/java_library_plugin.html#:~:text=The%20api%20configuration%20should%20be,are%20internal%20to%20the%20component.
    // https://dev.to/art_ptushkin/gradle-maven-scopes-cheat-sheet-4i56
    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                // https://stackoverflow.com/questions/29147643/how-to-exclude-dependencies-in-the-pom-file-generated-by-the-gradle
                pom.withXml {
                    asNode().dependencies.dependency.each { dep ->
                        if (dep.scope.last().value().last() == 'runtime') {
                            assert dep.parent().remove(dep)
                        }
                    }
                }
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                }
                pom {
                    name = "SiteMesh 3 Grails Plugin"
                    description = 'SiteMesh is a web-page layout and decoration framework and web- application integration framework to aid in creating sites consisting of many pages for which a consistent look/feel, navigation and layout scheme is required.'
                    url = 'https://github.com/sitemesh/sitemesh3'
                    licenses {
                        license {
                            name =  'The Apache Software License, Version 2.0'
                            url =  'https://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution =  'repo'
                        }
                    }
                    developers {
                        developer {
                            id = 'codeconsole'
                            name = 'Scott Murphy Heiberg'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/sitemesh/sitemesh3.git'
                        developerConnection = 'scm:git:git@github.com:sitemesh/sitemesh3.git'
                        url = 'https://github.com/sitemesh/sitemesh3/'
                    }
                    issueManagement {
                        system = 'GitHub'
                        url = 'https://github.com/sitemesh/sitemesh3/issues'
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.maven
    }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}